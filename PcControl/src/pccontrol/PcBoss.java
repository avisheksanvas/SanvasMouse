package pccontrol;

import com.sun.glass.events.KeyEvent;
import java.awt.AWTException;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Robot;
import java.awt.event.InputEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Avishek
 */
public class PcBoss extends javax.swing.JFrame {

    /**
     * Creates new form PcBoss
     */
    public PcBoss() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Welcome to Sanvas Mouse.");

        jButton1.setText("Show IP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel2)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jLabel2.setText(IP.toString());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static Robot robot;
    public static ServerSocket s ;
    public static Socket ss ;
    public static BufferedReader in ;
    public static InetAddress IP ;
    public static void main(String args[]) throws UnknownHostException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PcBoss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PcBoss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PcBoss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PcBoss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        IP =InetAddress.getLocalHost();
        System.out.println(IP.toString());
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PcBoss().setVisible(true);
            }
        });
        //Server Logic
        
        try
        {
            robot = new Robot();
            s = new ServerSocket(1342);
            while(true)
            {
            ss = s.accept();
            in = new BufferedReader(new InputStreamReader(ss.getInputStream()));
            //System.out.println("HEYY");
            String data = in.readLine();
            while( data != null )
            {
                data = in.readLine();
                if( data == null )
                    continue ;
                else if(data.contains(","))
                {
                    float movex = Float.parseFloat(data.split(",")[0]);
                    float movey = Float.parseFloat(data.split(",")[1]);
                    Point point = MouseInfo.getPointerInfo().getLocation();
                    float nowx = point.x;
                    float nowy = point.y;
                    robot.mouseMove((int)(nowx + movex ), (int)(nowy + movey));
                }
                else if( data.contains("Mouse Left Click"))
                {
                    //System.out.println("Left Click");
                    robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);
                    robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);
  
                }
                else if( data.contains("Mouse Right Click"))
                {
                    //System.out.println("Control");
                    robot.keyPress(KeyEvent.VK_CONTROL);
                    //System.out.println("Right Click");
                    robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);
                    robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);
                    
                    robot.keyRelease(KeyEvent.VK_CONTROL);
                }
                else if( data.contains("Scroll Up") )
                {
                    
                    try
                    {
                    Robot bot = new Robot();
                    bot.mouseWheel(15);
                    }
                    catch (Exception ex) 
                    {
                    ex.printStackTrace();
                    }
                }
                else if( data.contains("Scroll Down") )
                {
                    
                    try
                    {
                    Robot bot = new Robot();
                    bot.mouseWheel(-15);
                    }
                    catch (Exception ex) 
                    {
                    ex.printStackTrace();
                    }
                }
                //System.out.println(data);
                
                
            
            }
            }
        }
        catch(IOException e)
        {
            System.out.println("Error in creating server socket.");
        }
        catch(AWTException e)
        {
            System.out.println("Error in creating robot");
        }
        //Server Logic End 
        
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
